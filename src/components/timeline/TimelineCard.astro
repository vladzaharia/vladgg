---
import { formatDateRange } from "../../utils/date";
import { getJobColor, getComputedColor } from "../../utils/colors";
import ExpandedTimelineCard from "./ExpandedTimelineCard.astro";

interface Props {
  entry: {
    position: string;
    positionShort?: string;
    company: {
      name: string;
      nameShort: string | null;
      logo: string | null;
    };
    location: string;
    dateFrom: string;
    dateTo: string | null;
  };
  position: {
    startPosition: number;
    endPosition: number;
    isShortTerm: boolean;
  };
  slug: string;
  index: number;
  isMobile?: boolean;
}

const { entry, position, slug, index, isMobile = false } = Astro.props;
const isLeft = index % 2 === 1;
const centerPosition = (position.startPosition + position.endPosition) / 2;
const color = getJobColor(index);

// Format dates
const startDate = new Date(entry.dateFrom).toLocaleDateString("en-US", {
  month: "short",
  year: "numeric",
});
const endDate = entry.dateTo
  ? new Date(entry.dateTo).toLocaleDateString("en-US", {
      month: "short",
      year: "numeric",
    })
  : "Present";
---

<div
  class={`
    timeline-card
    ${isMobile ? "block w-full" : "absolute flex items-center group"}
  `}
  style={!isMobile
    ? {
        top: `${centerPosition * 100}%`,
        [isLeft ? "left" : "right"]: "56%",
        width: `${position.isShortTerm ? "32%" : "38%"}`,
        transform: `translateY(-50%)`,
      }
    : {}}
  data-position={centerPosition}
  data-side={isLeft ? "left" : "right"}
>
  <div
    data-aos={isLeft ? "zoom-in-right" : "zoom-in-left"}
    data-aos-delay={`${index * 250}`}
    data-aos-duration="1000"
    data-aos-anchor=".timeline"
    class="relative w-full"
  >
    {/* Date markers */}
    {
      !isMobile && (
        <>
          <div
            class={`absolute text-sm whitespace-nowrap transition-colors duration-300 ${color?.darkText || ''} font-date`}
            style={{
              [isLeft ? "left" : "right"]: "-5%",
              top: "-2rem",
            }}
          >
            {endDate}
          </div>
          <div
            class={`absolute text-sm whitespace-nowrap transition-colors duration-300 ${color?.darkText || ''} font-date`}
            style={{
              [isLeft ? "left" : "right"]: "-5%",
              bottom: "-2rem",
            }}
          >
            {startDate}
          </div>
        </>
      )
    }

    {/* Content card */}
    <div
      class={`
        timeline-card-content
        bg-slate-800/50 backdrop-blur-sm rounded-lg border transition-all duration-300 cursor-pointer
        hover:${isLeft ? "" : "-"}translate-x-0.5
        ${color!.border}
        ${position.isShortTerm ? "p-2.5" : "p-4"}
      `}
      style={{
        transform: "scale(1)",
        transformOrigin: isLeft ? "left" : "right",
      }}
    >
      <slot />
    </div>
  </div>
</div>

<ExpandedTimelineCard
  entry={entry}
  color={color}
  startDate={startDate}
  endDate={endDate}
>
  <slot name="expanded" slot="expanded" />
</ExpandedTimelineCard>

<script src="./timeline-card.ts"></script>

<style>
  .timeline-card-expanded {
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(8px);
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
  }
  
  .timeline-card-expanded.opacity-100 {
    opacity: 1;
  }

  .expanded-content {
    width: 100%;
    height: 100%;
    transform-origin: 0 0;
  }

  .timeline-card-expanded.opacity-100 .expanded-content.expanded-shadow {
    @apply shadow-2xl;
  }
</style>
