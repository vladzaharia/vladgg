---
import { calculateTimelineYears, calculateJobPosition, adjustPositionsWithMinSpacing } from '../../utils/timeline';
import TimelineJobCard from './TimelineJobCard.astro';
import TimelineBase from './TimelineBase.astro';

interface Props {
  jobs: Array<{
    entry: {
      position: string;
      positionShort?: string;
      company: {
        name: string;
        logo?: string;
        url?: string;
      };
      location: string;
      dateFrom: string;
      dateTo: string | null;
    };
    slug: string;
  }>;
}

const { jobs } = Astro.props;

// Extract job dates for timeline calculations
const jobDates = jobs.map(j => ({
  dateFrom: j.entry.dateFrom,
  dateTo: j.entry.dateTo
}));

// Calculate timeline years
const timelineYears = calculateTimelineYears(jobDates);

const minYear = Math.min(...timelineYears.map(t => t.year));
const maxYear = Math.max(...timelineYears.map(t => t.year));

// Calculate job positions and sort by start date (newest first)
const jobsWithPositions = jobs
  .map(job => ({
    ...job,
    position: calculateJobPosition(
      { dateFrom: job.entry.dateFrom, dateTo: job.entry.dateTo },
      minYear,
      maxYear
    )
  }))
  .sort((a, b) => {
    const dateA = new Date(a.entry.dateFrom);
    const dateB = new Date(b.entry.dateFrom);
    return dateB.getTime() - dateA.getTime();
  });

// Adjust positions to ensure minimum spacing
adjustPositionsWithMinSpacing(jobsWithPositions);

---

<div class="relative mx-4 md:mx-16">
  {/* Container for timeline and content with padding for overflow */}
  <div class="relative py-12 min-h-[1000px] md:block hidden">
    {/* Timeline components */}
    <TimelineBase jobs={jobsWithPositions} years={timelineYears} />
    
    {/* Job cards */}
    {jobsWithPositions.map((job, index) => (
      <TimelineJobCard 
        entry={job.entry}
        position={job.position}
        slug={job.slug}
        index={index}
      />
    ))}
  </div>

  {/* Mobile list view */}
  <div class="md:hidden space-y-4 py-8">
    {jobsWithPositions.map((job, index) => (
      <TimelineJobCard 
        entry={job.entry}
        position={job.position}
        slug={job.slug}
        index={jobsWithPositions.length - index - 1}
        isMobile={true}
      />
    ))}
  </div>
</div>
